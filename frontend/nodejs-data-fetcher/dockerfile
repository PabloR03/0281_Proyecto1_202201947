# Usar la imagen oficial de Node.js
FROM node:18-alpine

# Instalar curl para health check
RUN apk add --no-cache curl

# Establecer el directorio de trabajo en el contenedor
WORKDIR /app

# Copiar los archivos de dependencias
COPY package*.json ./

# Instalar las dependencias
RUN npm ci --only=production && npm cache clean --force

# Copiar el código de la aplicación
COPY . .

# Crear un usuario no-root para ejecutar la aplicación
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodeapi -u 1001 -G nodejs

# Cambiar la propiedad de los archivos al usuario
RUN chown -R nodeapi:nodejs /app
USER nodeapi

# Exponer el puerto
EXPOSE 3001

# Variables de entorno por defecto
ENV NODE_ENV=production
ENV NODEJS_PORT=3001
# Para conectar con el backend Go ejecutándose localmente
ENV BACKEND_URL=http://host.docker.internal:8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3001/health || exit 1

# Comando para ejecutar la aplicación
CMD ["node", "index.js"]